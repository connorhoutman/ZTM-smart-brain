{"ast":null,"code":"var _jsxFileName = \"/Users/connorhoutman/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'a5387a52cdef43c6b3c4ca663c325305'\n});\nconst returnClarifaiRequestOptions = imageUrl => {\n  const PAT = '4996b68f73cc4f5ca659eafffa29f52e';\n  const USER_ID = '7j3u1dj38cy9';\n  const APP_ID = 'Face-Recognition_Brain';\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    // calculateFaceLocation = (data) => {\n    //   const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    //   const image = document.getElementById('inputimage');\n    //   const width = Number(image.width);\n    //   const height = Number(image.height);\n    //   return {\n    //     leftCol: clarifaiFace.left_col * width,\n    //     topRow: clarifaiFace.top_row * height,\n    //     rightCol: width - (clarifaiFace.right_col * width),\n    //     bottomRow: height - (clarifaiFace.bottom_row * height)\n    //   }\n    // }\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input)).then(response => response.json()).then(response => {\n        console.log('hi', response);\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        color: \"#ffffff\",\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ParticlesBg","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","jsxDEV","_jsxDEV","app","App","apiKey","returnClarifaiRequestOptions","imageUrl","PAT","USER_ID","APP_ID","MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","constructor","loadUser","data","setState","user","id","name","email","entries","joined","displayFaceBox","box","onInputChange","event","input","target","value","onButtonSubmit","state","fetch","then","response","json","console","log","count","Object","assign","calculateFaceLocation","catch","err","onRouteChange","route","isSignedIn","render","className","children","color","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/connorhoutman/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport ParticlesBg from 'particles-bg'\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: 'a5387a52cdef43c6b3c4ca663c325305'\n});\n\nconst returnClarifaiRequestOptions = (imageUrl) => {\n  const PAT = '4996b68f73cc4f5ca659eafffa29f52e';\n  const USER_ID = '7j3u1dj38cy9';       \n  const APP_ID = 'Face-Recognition_Brain';\n  const MODEL_ID = 'face-detection';\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n    \"user_id\": USER_ID,\n    \"app_id\": APP_ID\n    },\n    \"inputs\": [\n      {\n        \"data\": {\n          \"image\": {\n            \"url\": IMAGE_URL\n          }\n        }\n      }\n    ]\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n\n  return requestOptions;\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n  // calculateFaceLocation = (data) => {\n  //   const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  //   const image = document.getElementById('inputimage');\n  //   const width = Number(image.width);\n  //   const height = Number(image.height);\n  //   return {\n  //     leftCol: clarifaiFace.left_col * width,\n  //     topRow: clarifaiFace.top_row * height,\n  //     rightCol: width - (clarifaiFace.right_col * width),\n  //     bottomRow: height - (clarifaiFace.bottom_row * height)\n  //   }\n  // }\n \n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    \n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequestOptions(this.state.input))\n      .then(response => response.json())\n      .then(response => {\n          console.log('hi', response)\n          if (response) {\n            fetch('http://localhost:3000/image', {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count}))\n              })\n\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg color=\"#ffffff\" type=\"cobweb\" bg={true} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? <div>\n              <Logo />\n              <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n              <ImageLinkForm\n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n             route === 'signin'\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}